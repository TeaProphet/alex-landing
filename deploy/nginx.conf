# Nginx Configuration for fitness-trainer.online
# Place this file in /etc/nginx/sites-available/fitness-trainer.online
# Then create symlink: sudo ln -s /etc/nginx/sites-available/fitness-trainer.online /etc/nginx/sites-enabled/

server {
    listen 80;
    listen [::]:80;
    server_name fitness-trainer.online www.fitness-trainer.online;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=30r/s;
    
    # Root directory for frontend
    root /var/www/html/fitness-trainer;
    index index.html;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss application/atom+xml image/svg+xml;
    
    # Frontend - Serve React SPA
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            limit_req zone=static burst=50 nodelay;
        }
        
        # Security for HTML files
        location ~* \.html$ {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
    }
    
    # Backend API - Proxy to Strapi
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://127.0.0.1:1337/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Strapi Admin Panel
    location /admin {
        proxy_pass http://127.0.0.1:1337/admin;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Serve uploaded images from Strapi
    location /uploads/ {
        alias /var/www/fitness-trainer/backend/public/uploads/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # Image optimization headers
        add_header Vary Accept-Encoding;
        
        # Security
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            return 403;
        }
    }
    
    # Favicon and manifest
    location ~* ^/(favicon\.ico|apple-touch-icon\.png|icon-.*\.png|manifest\.json|robots\.txt|sitemap\.xml)$ {
        root /var/www/html/fitness-trainer;
        expires 30d;
        add_header Cache-Control "public";
    }
    
    # Security - Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(env|ini|conf|bak|old|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to Node.js files
    location ~* \.(js\.map|ts|tsx)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    # Logging
    access_log /var/log/nginx/fitness-trainer-access.log;
    error_log /var/log/nginx/fitness-trainer-error.log;
}

# Redirect www to non-www (optional)
server {
    listen 80;
    listen [::]:80;
    server_name www.fitness-trainer.online;
    return 301 http://fitness-trainer.online$request_uri;
}